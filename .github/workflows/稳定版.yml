name: 稳定版

on:
  schedule:
    - cron: '0 3,20 * * *'
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.getversion.outputs.tag }}
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      -
        name: Get version
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/tailscale/tailscale/releases/latest | jq -r '.tag_name'`
          tag=`curl https://api.github.com/repos/tailscale/tailscale/releases/latest | jq -r '.tag_name' | tr -d 'v'`
          cver=`curl https://api.github.com/repos/lmq8267/tailscale/releases/latest | jq -r '.tag_name'`
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.tag != needs.check.outputs.cver }}
    steps:
      - name: 获取最新Go
        run: |
          latest_version=$(curl -L -k -s https://golang.org/dl/?mode=json | grep -m 1 -o '"version": "[^"]*' | sed 's/"version": "//' | tr -d 'go" ')
          echo "go版本=$latest_version"
          echo "gotag=$latest_version" >> $GITHUB_ENV
      - name: 安装go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.gotag }}
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: 编译
        run: |
          git clone https://github.com/tailscale/tailscale -b ${{ needs.check.outputs.ver }} /opt/src
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          cd /opt/src
          sudo timedatectl set-timezone "Asia/Shanghai"
          #sed -i 's|return strings.TrimSpace(tailscaleroot.VersionDotTxt) + "-ERR-BuildInfo"|return strings.TrimSpace(tailscaleroot.VersionDotTxt)|g' ./version/version.go
          #sed -i 's|return fmt.Sprintf("%s-dev%s-t%s%s", strings.TrimSpace(tailscaleroot.VersionDotTxt), bi.commitDate, bi.commitAbbrev(), dirtyString())|return fmt.Sprintf(strings.TrimSpace(tailscaleroot.VersionDotTxt))|g' ./version/version.go
          #sed -i 's|return strings.TrimSpace(tailscaleroot.VersionDotTxt) + "-dev" + bi.commitDate|return strings.TrimSpace(tailscaleroot.VersionDotTxt)|g' ./version/version.go
          sed -i 's|return "/var/lib/tailscale/tailscaled.state"|return "/etc/storage/tailscale/lib/tailscaled.state"|g' ./paths/paths_unix.go
          tar -xvf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          chmod 777 /opt/st/strip
          echo 正常编译
          CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -ldflags="-X 'tailscale.com/version.longStamp=${{ needs.check.outputs.ver }}' -X 'tailscale.com/version.shortStamp=${{ needs.check.outputs.ver }}' -s -w" tailscale.com/cmd/tailscale
          CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -ldflags="-X 'tailscale.com/version.longStamp=${{ needs.check.outputs.ver }}' -X 'tailscale.com/version.shortStamp=${{ needs.check.outputs.ver }}' -s -w" tailscale.com/cmd/tailscaled
          CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -ldflags="-X 'tailscale.com/version.longStamp=${{ needs.check.outputs.ver }}' -X 'tailscale.com/version.shortStamp=${{ needs.check.outputs.ver }}' -s -w" tailscale.com/cmd/derper
          /opt/st/strip tailscale
          /opt/st/strip tailscaled
          /opt/st/strip derper
          mkdir -p /opt/tainomal
          cp -rf tailscale /opt/tainomal/tailscale
          cp -rf tailscaled /opt/tainomal/tailscaled
          cp -rf derper /opt/tainomal/derper
          cd /opt/tainomal
          /opt/upx-3.95-amd64_linux/upx --lzma --best tailscale
          /opt/upx-3.95-amd64_linux/upx --lzma --best tailscaled
          /opt/upx-3.95-amd64_linux/upx --lzma --best derper
          echo $(md5sum tailscale | awk '{print $1;}') >tailscale.txt
          echo $(md5sum tailscaled | awk '{print $1;}') >tailscaled.txt
          echo $(md5sum derper | awk '{print $1;}') >derper.txt
          cd /opt/src
          echo 编译迷你版
          go clean
          CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -o tailscaled.combined -tags ts_include_cli -ldflags="-X 'tailscale.com/version.Long=${{ needs.check.outputs.ver }}' -X 'tailscale.com/version.Short=${{ needs.check.outputs.ver }}' -s -w" ./cmd/tailscaled
          /opt/st/strip tailscaled.combined
          mkdir -p /opt/taifull
          cp -rf tailscaled.combined /opt/taifull/tailscaled_full
          cd /opt/taifull
          /opt/upx-3.95-amd64_linux/upx --lzma --best tailscaled_full
          echo $(md5sum tailscaled_full | awk '{print $1;}') >tailscaled_full.txt
          cd /opt/src
          go clean
          echo 编译精简版
          CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -o tailscale -tags ts_omit_aws,ts_omit_bird,ts_omit_tap,ts_omit_kube -ldflags="-X 'tailscale.com/version.Long=${{ needs.check.outputs.ver }}' -X 'tailscale.com/version.Short=${{ needs.check.outputs.ver }}' -s -w" ./cmd/tailscale
          CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -o tailscaled -tags ts_omit_aws,ts_omit_bird,ts_omit_tap,ts_omit_kube -ldflags="-X 'tailscale.com/version.Long=${{ needs.check.outputs.ver }}' -X 'tailscale.com/version.Short=${{ needs.check.outputs.ver }}' -s -w" ./cmd/tailscaled
          /opt/st/strip tailscale
          /opt/st/strip tailscaled
          mkdir -p /opt/tailite
          cp -rf tailscaled /opt/tailite/tailscaled_lite
          cp -rf tailscale /opt/tailite/tailscale_lite
          cd /opt/tailite
          /opt/upx-3.95-amd64_linux/upx --lzma --best tailscale_lite
          /opt/upx-3.95-amd64_linux/upx --lzma --best tailscaled_lite
          echo $(md5sum tailscale_lite | awk '{print $1;}') >tailscale_lite.txt
          echo $(md5sum tailscaled_lite | awk '{print $1;}') >tailscaled_lite.txt
          echo "build_time=$(TZ=UTC-8 date +%Y-%m-%d' '%H:%M:%S)" >> $GITHUB_ENV
      - name: 设置机器人
        run : |
         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
         git config --global user.name "github-actions[bot]"
         sudo timedatectl set-timezone "Asia/Shanghai"
      - name: 上传
        run: |
          git clone https://github.com/lmq8267/tailscale.git /opt/tai
          [ ! -d "/opt/tai/install/${{ needs.check.outputs.tag }}" ] && mkdir -p "/opt/tai/install/${{ needs.check.outputs.tag }}"
          cp -rf /opt/tainomal/tailscale "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscale"
          cp -rf /opt/tainomal/tailscaled "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscaled"
          cp -rf /opt/tainomal/derper "/opt/tai/install/${{ needs.check.outputs.tag }}/derper"
          cp -rf /opt/tainomal/derper.txt "/opt/tai/install/${{ needs.check.outputs.tag }}/derper.txt"
          cp -rf /opt/tainomal/tailscale.txt "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscale.txt"
          cp -rf /opt/tainomal/tailscaled.txt "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscaled.txt"
          cp -rf /opt/taifull/tailscaled_full "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscaled_full"
          cp -rf /opt/taifull/tailscaled_full.txt "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscaled_full.txt"
          cp -rf /opt/tailite/tailscale_lite "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscale_lite"
          cp -rf /opt/tailite/tailscaled_lite "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscaled_lite"
          cp -rf /opt/tailite/tailscale_lite.txt "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscale_lite.txt"
          cp -rf /opt/tailite/tailscaled_lite.txt "/opt/tai/install/${{ needs.check.outputs.tag }}/tailscaled_lite.txt"
          cd /opt/tai
          git add .
          git commit -am "稳定版：${{ needs.check.outputs.tag }} 更新时间： $(date '+%Y-%m-%d %H:%M:%S')"
          git push --quiet "https://${{ secrets.c8 }}@github.com/lmq8267/tailscale.git"
      - 
        name: 发布 
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 稳定版 - 编译时间： ${{ env.build_time }}
           **密钥存储位置已改为：/etc/storage/tailscale/lib/tailscaled.state **

           ### **各版本区别**
           - **常规版**：tailscale 和 tailscaled 其中tailscale.txt和tailscaled.txt 为其MD5校验值

           - **迷你版**：tailscaled_full  其中tailscaled_full.txt 为其MD5校验值

           - **精简版**：tailscale_lite和tailscaled_lite 其中tailscale_lite.txt和tailscaled_lite 为其MD5校验值

           - **服务器**：derper自建服务器，其中derper.txt为其MD5校验值

           **迷你版需要改名为tailscaled 并用ln -sf tailscaled tailscale 软连接出tailscale子程序**
           **迷你版为两个程序集中在一个里面使用软连接分出子程序**
           
           **[精简版为省略调试信息和较少使用的功能等内容](https://tailscale.com/kb/1207/small-tailscale/)**

           **[官方更新说明](https://github.com/tailscale/tailscale/releases)**
           
          tag_name: ${{ needs.check.outputs.tag }}
          files: |
              /opt/tainomal/tailscale
              /opt/tainomal/tailscale.txt
              /opt/tainomal/tailscaled
              /opt/tainomal/tailscaled.txt
              /opt/tainomal/derper
              /opt/tainomal/derper.txt
              /opt/taifull/tailscaled_full
              /opt/taifull/tailscaled_full.txt
              /opt/tailite/tailscale_lite
              /opt/tailite/tailscale_lite.txt
              /opt/tailite/tailscaled_lite
              /opt/tailite/tailscaled_lite.txt
      - name: 删除工作流
        uses: GitRML/delete-workflow-runs@main
        with:
         token: ${{ secrets.c8 }}
         retain_days: 2
         keep_minimum_runs: 0
     
  keepalive-workflow:
    # github超过60天未提交将自动停止工作流
    name: 工作流保活 
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
        #with:
          #use_api: true
